[2020-01-14 10:45:56,509] INFO SchemaRegistryConfig values: 
	access.control.allow.headers = 
	access.control.allow.methods = 
	access.control.allow.origin = 
	authentication.method = NONE
	authentication.realm = 
	authentication.roles = [*]
	authentication.skip.paths = []
	avro.compatibility.level = 
	compression.enable = true
	debug = false
	host.name = 10.200.7.184
	idle.timeout.ms = 30000
	inter.instance.headers.whitelist = []
	inter.instance.protocol = http
	kafkastore.bootstrap.servers = []
	kafkastore.connection.url = localhost:2181
	kafkastore.group.id = 
	kafkastore.init.timeout.ms = 60000
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	kafkastore.sasl.kerberos.service.name = 
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.security.protocol = PLAINTEXT
	kafkastore.ssl.cipher.suites = 
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.key.password = [hidden]
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.ssl.keystore.location = 
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.ssl.keystore.type = JKS
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.trustmanager.algorithm = PKIX
	kafkastore.ssl.truststore.location = 
	kafkastore.ssl.truststore.password = [hidden]
	kafkastore.ssl.truststore.type = JKS
	kafkastore.timeout.ms = 500
	kafkastore.topic = _schemas
	kafkastore.topic.replication.factor = 3
	kafkastore.write.max.retries = 5
	kafkastore.zk.session.timeout.ms = 30000
	listeners = [http://0.0.0.0:8081]
	master.eligibility = true
	metric.reporters = []
	metrics.jmx.prefix = kafka.schema.registry
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	metrics.tag.map = []
	mode.mutability = false
	port = 8081
	request.logger.name = io.confluent.rest-utils.requests
	resource.extension.class = []
	resource.extension.classes = []
	resource.static.locations = []
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	rest.servlet.initializor.classes = []
	schema.compatibility.level = backward
	schema.providers = []
	schema.registry.group.id = schema-registry
	schema.registry.inter.instance.protocol = 
	schema.registry.resource.extension.class = []
	schema.registry.zk.namespace = schema_registry
	shutdown.graceful.ms = 1000
	ssl.cipher.suites = []
	ssl.client.auth = false
	ssl.client.authentication = NONE
	ssl.enabled.protocols = []
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = [hidden]
	ssl.keymanager.algorithm = 
	ssl.keystore.location = 
	ssl.keystore.password = [hidden]
	ssl.keystore.reload = false
	ssl.keystore.type = JKS
	ssl.keystore.watch.location = 
	ssl.protocol = TLS
	ssl.provider = 
	ssl.trustmanager.algorithm = 
	ssl.truststore.location = 
	ssl.truststore.password = [hidden]
	ssl.truststore.type = JKS
	websocket.path.prefix = /ws
	websocket.servlet.initializor.classes = []
	zookeeper.set.acl = false
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2020-01-14 10:45:56,542] INFO Logging initialized @726ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
[2020-01-14 10:45:56,647] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.ApplicationServer)
[2020-01-14 10:46:59,504] INFO SchemaRegistryConfig values: 
	access.control.allow.headers = 
	access.control.allow.methods = 
	access.control.allow.origin = 
	authentication.method = NONE
	authentication.realm = 
	authentication.roles = [*]
	authentication.skip.paths = []
	avro.compatibility.level = 
	compression.enable = true
	debug = false
	host.name = 10.200.7.184
	idle.timeout.ms = 30000
	inter.instance.headers.whitelist = []
	inter.instance.protocol = http
	kafkastore.bootstrap.servers = []
	kafkastore.connection.url = localhost:2181
	kafkastore.group.id = 
	kafkastore.init.timeout.ms = 60000
	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
	kafkastore.sasl.kerberos.service.name = 
	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
	kafkastore.sasl.mechanism = GSSAPI
	kafkastore.security.protocol = PLAINTEXT
	kafkastore.ssl.cipher.suites = 
	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
	kafkastore.ssl.endpoint.identification.algorithm = 
	kafkastore.ssl.key.password = [hidden]
	kafkastore.ssl.keymanager.algorithm = SunX509
	kafkastore.ssl.keystore.location = 
	kafkastore.ssl.keystore.password = [hidden]
	kafkastore.ssl.keystore.type = JKS
	kafkastore.ssl.protocol = TLS
	kafkastore.ssl.provider = 
	kafkastore.ssl.trustmanager.algorithm = PKIX
	kafkastore.ssl.truststore.location = 
	kafkastore.ssl.truststore.password = [hidden]
	kafkastore.ssl.truststore.type = JKS
	kafkastore.timeout.ms = 500
	kafkastore.topic = _schemas
	kafkastore.topic.replication.factor = 3
	kafkastore.write.max.retries = 5
	kafkastore.zk.session.timeout.ms = 30000
	listeners = [http://0.0.0.0:8081]
	master.eligibility = true
	metric.reporters = []
	metrics.jmx.prefix = kafka.schema.registry
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	metrics.tag.map = []
	mode.mutability = false
	port = 8081
	request.logger.name = io.confluent.rest-utils.requests
	resource.extension.class = []
	resource.extension.classes = []
	resource.static.locations = []
	response.mediatype.default = application/vnd.schemaregistry.v1+json
	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
	rest.servlet.initializor.classes = []
	schema.compatibility.level = backward
	schema.providers = []
	schema.registry.group.id = schema-registry
	schema.registry.inter.instance.protocol = 
	schema.registry.resource.extension.class = []
	schema.registry.zk.namespace = schema_registry
	shutdown.graceful.ms = 1000
	ssl.cipher.suites = []
	ssl.client.auth = false
	ssl.client.authentication = NONE
	ssl.enabled.protocols = []
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = [hidden]
	ssl.keymanager.algorithm = 
	ssl.keystore.location = 
	ssl.keystore.password = [hidden]
	ssl.keystore.reload = false
	ssl.keystore.type = JKS
	ssl.keystore.watch.location = 
	ssl.protocol = TLS
	ssl.provider = 
	ssl.trustmanager.algorithm = 
	ssl.truststore.location = 
	ssl.truststore.password = [hidden]
	ssl.truststore.type = JKS
	websocket.path.prefix = /ws
	websocket.servlet.initializor.classes = []
	zookeeper.set.acl = false
 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2020-01-14 10:46:59,547] INFO Logging initialized @804ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
[2020-01-14 10:46:59,654] INFO Adding listener: http://0.0.0.0:8081 (io.confluent.rest.ApplicationServer)
[2020-01-14 10:46:59,954] INFO Created schema registry namespace localhost:2181 /schema_registry (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
[2020-01-14 10:47:00,663] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://10.200.7.184:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2020-01-14 10:47:00,668] INFO Registering schema provider for AVRO: io.confluent.kafka.schemaregistry.avro.AvroSchemaProvider (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2020-01-14 10:47:00,668] INFO Registering schema provider for PROTOBUF: io.confluent.kafka.schemaregistry.protobuf.ProtobufSchemaProvider (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2020-01-14 10:47:01,134] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2020-01-14 10:47:01,137] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2020-01-14 10:47:01,244] INFO Kafka store reader thread starting consumer (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2020-01-14 10:47:01,313] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2020-01-14 10:47:01,314] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2020-01-14 10:47:01,409] INFO Wait to catch up until the offset at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2020-01-14 10:47:01,522] INFO Joining schema registry with Zookeeper-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2020-01-14 10:47:01,534] INFO Successfully elected the new master: {"host":"10.200.7.184","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2020-01-14 10:47:01,549] INFO Successfully elected the new master: {"host":"10.200.7.184","port":8081,"master_eligibility":true,"scheme":"http","version":1} (io.confluent.kafka.schemaregistry.masterelector.zookeeper.ZookeeperMasterElector)
[2020-01-14 10:47:01,561] INFO Wait to catch up until the offset at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2020-01-14 10:47:01,771] INFO jetty-9.4.20.v20190813; built: 2019-08-13T21:28:18.144Z; git: 84700530e645e812b336747464d6fbbf370c9a20; jvm 1.8.0_162-b12 (org.eclipse.jetty.server.Server)
[2020-01-14 10:47:01,834] INFO DefaultSessionIdManager workerName=node0 (org.eclipse.jetty.server.session)
[2020-01-14 10:47:01,835] INFO No SessionScavenger set, using defaults (org.eclipse.jetty.server.session)
[2020-01-14 10:47:01,838] INFO node0 Scavenging every 600000ms (org.eclipse.jetty.server.session)
[2020-01-14 10:47:02,465] INFO HV000001: Hibernate Validator 6.0.11.Final (org.hibernate.validator.internal.util.Version)
[2020-01-14 10:47:02,724] INFO JVM Runtime does not support Modules (org.eclipse.jetty.util.TypeUtil)
[2020-01-14 10:47:02,726] INFO Started o.e.j.s.ServletContextHandler@163d04ff{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2020-01-14 10:47:02,745] INFO Started o.e.j.s.ServletContextHandler@2cae1042{/ws,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2020-01-14 10:47:02,795] INFO Started NetworkTrafficServerConnector@37d31475{HTTP/1.1,[http/1.1]}{0.0.0.0:8081} (org.eclipse.jetty.server.AbstractConnector)
[2020-01-14 10:47:02,796] INFO Started @4055ms (org.eclipse.jetty.server.Server)
[2020-01-14 10:47:02,796] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
[2020-01-14 10:50:46,237] INFO Wait to catch up until the offset at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2020-01-14 10:50:46,249] INFO Wait to catch up until the offset at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
[2020-01-14 10:50:46,315] INFO 0:0:0:0:0:0:0:1 - - [14/Jan/2020:18:50:46 +0000] "POST /subjects/foo/versions HTTP/1.1" 200 8  290 (io.confluent.rest-utils.requests)
[2020-01-14 10:51:05,285] INFO 0:0:0:0:0:0:0:1 - - [14/Jan/2020:18:51:05 +0000] "GET /subjects/foo/versions/1 HTTP/1.1" 200 119  9 (io.confluent.rest-utils.requests)
[2020-01-14 10:51:10,122] INFO Stopped NetworkTrafficServerConnector@37d31475{HTTP/1.1,[http/1.1]}{0.0.0.0:8081} (org.eclipse.jetty.server.AbstractConnector)
[2020-01-14 10:51:10,123] INFO node0 Stopped scavenging (org.eclipse.jetty.server.session)
[2020-01-14 10:51:10,125] INFO Stopped o.e.j.s.ServletContextHandler@2cae1042{/ws,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2020-01-14 10:51:10,131] INFO Stopped o.e.j.s.ServletContextHandler@163d04ff{/,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
[2020-01-14 10:51:10,132] INFO Shutting down schema registry (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
[2020-01-14 10:51:10,133] INFO [kafka-store-reader-thread-_schemas]: Shutting down (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2020-01-14 10:51:10,134] INFO [kafka-store-reader-thread-_schemas]: Stopped (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2020-01-14 10:51:10,134] INFO [kafka-store-reader-thread-_schemas]: Shutdown completed (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
[2020-01-14 10:51:10,136] INFO KafkaStoreReaderThread shutdown complete. (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
